{"ast":null,"code":"var _jsxFileName = \"/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/components/profile/Github.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getGitHubRepos } from \"./../../store/actions/profile\";\nimport Spinner from \"./../layout/Spinner\";\n\nconst Github = props => {\n  useEffect(() => {\n    props.getGitHubRepos(props.username);\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"profile-github\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, !props.repos ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }) : props.repos !== [] && props.repos.map(repo => {\n    return React.createElement(\"div\", {\n      key: repo._id,\n      className: \"repo bg-white p-1 my-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: repo.html_url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, repo.name)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, repo.description)));\n  }));\n};\n\nGithub.propTypes = {\n  getGitHubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    repos: state.profile.repos\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getGitHubRepos\n})(Github);","map":{"version":3,"sources":["/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/components/profile/Github.js"],"names":["React","Fragment","useEffect","PropTypes","connect","getGitHubRepos","Spinner","Github","props","username","repos","map","repo","_id","html_url","name","description","propTypes","func","isRequired","array","string","mapStateToProps","state","profile"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtBN,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAACH,cAAN,CAAqBG,KAAK,CAACC,QAA3B;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACD,KAAK,CAACE,KAAP,GACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGCF,KAAK,CAACE,KAAN,KAAgB,EAAhB,IACAF,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IAAI;AACtB,WACE;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAoB,MAAA,SAAS,EAAC,wBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAED,IAAI,CAACE,QADb;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,GAAG,EAAC,qBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGF,IAAI,CAACG,IALR,CADF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,IAAI,CAACI,WAAT,CAVF,CADF,CADF;AAgBD,GAjBD,CALJ,CADF;AA2BD,CAhCD;;AAkCAT,MAAM,CAACU,SAAP,GAAmB;AACjBZ,EAAAA,cAAc,EAAEF,SAAS,CAACe,IAAV,CAAeC,UADd;AAEjBT,EAAAA,KAAK,EAAEP,SAAS,CAACiB,KAAV,CAAgBD,UAFN;AAGjBV,EAAAA,QAAQ,EAAEN,SAAS,CAACkB,MAAV,CAAiBF;AAHV,CAAnB;;AAMA,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLb,IAAAA,KAAK,EAAEa,KAAK,CAACC,OAAN,CAAcd;AADhB,GAAP;AAGD,CAJD;;AAMA,eAAeN,OAAO,CAACkB,eAAD,EAAkB;AAAEjB,EAAAA;AAAF,CAAlB,CAAP,CAA6CE,MAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getGitHubRepos } from \"./../../store/actions/profile\";\nimport Spinner from \"./../layout/Spinner\";\n\nconst Github = props => {\n  useEffect(() => {\n    props.getGitHubRepos(props.username);\n  }, []);\n\n  return (\n    <div className=\"profile-github\">\n      {!props.repos ? (\n        <Spinner />\n      ) : (\n        props.repos !== [] &&\n        props.repos.map(repo => {\n          return (\n            <div key={repo._id} className=\"repo bg-white p-1 my-1\">\n              <div>\n                <h4>\n                  <a\n                    href={repo.html_url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {repo.name}\n                  </a>\n                </h4>\n                <p>{repo.description}</p>\n              </div>\n            </div>\n          );\n        })\n      )}\n    </div>\n  );\n};\n\nGithub.propTypes = {\n  getGitHubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    repos: state.profile.repos\n  };\n};\n\nexport default connect(mapStateToProps, { getGitHubRepos })(Github);\n"]},"metadata":{},"sourceType":"module"}