{"ast":null,"code":"var _jsxFileName = \"/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/components/auth/Register.js\";\nimport React, { Fragment, useState } from \"react\";\nimport validator from \"validator\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport setAlert from \"./../../store/actions/alert\";\nimport { register } from \"./../../store/actions/auth\";\nimport PropTypes from \"prop-types\";\nimport * as registerActions from \"./../../store/actions/auth\";\n\nconst Register = props => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = formData;\n\n  const handleInputChange = event => {\n    setFormData({ ...formData,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const onSubmit = async event => {\n    console.log(name);\n    event.preventDefault();\n    const isEmail = validator.isEmail(email);\n    const isPasswordMatch = password === password2;\n    const validPasswordCharacters = !password.includes(\"passwor\") && !password.includes(\"123456\");\n\n    if (isEmail && isPasswordMatch && validPasswordCharacters) {\n      props.register(name, email, password);\n    } else {\n      if (!isEmail) {\n        props.setAlert(\"Please enter a valid E-Mail Adresse\", \"danger\");\n      }\n\n      if (!isPasswordMatch) {\n        props.setAlert(\"Please enter matching passwords\", \"danger\");\n      }\n\n      if (!validPasswordCharacters) {\n        props.setAlert('Your password must not include \"123456\" or \"password\"', \"danger\");\n      }\n    }\n  };\n\n  if (props.isAuthenticated) {\n    return React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Sign Up\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), \" Create Your Account\"), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: event => {\n      onSubmit(event);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: event => {\n      handleInputChange(event);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Email Address\",\n    name: \"email\",\n    value: email,\n    onChange: event => {\n      handleInputChange(event);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    className: \"form-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"This site uses Gravatar so if you want a profile image, use a Gravatar email\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    value: password,\n    onChange: event => {\n      handleInputChange(event);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"password2\",\n    value: password2,\n    onChange: event => {\n      handleInputChange(event);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Already have an account? \", React.createElement(Link, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Sign In\")));\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register);","map":{"version":3,"sources":["/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/components/auth/Register.js"],"names":["React","Fragment","useState","validator","axios","Link","Redirect","connect","setAlert","register","PropTypes","registerActions","Register","props","formData","setFormData","name","email","password","password2","handleInputChange","event","target","value","onSubmit","console","log","preventDefault","isEmail","isPasswordMatch","validPasswordCharacters","includes","isAuthenticated","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport validator from \"validator\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport setAlert from \"./../../store/actions/alert\";\nimport { register } from \"./../../store/actions/auth\";\nimport PropTypes from \"prop-types\";\nimport * as registerActions from \"./../../store/actions/auth\";\n\nconst Register = props => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const handleInputChange = event => {\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const onSubmit = async event => {\n    console.log(name);\n    event.preventDefault();\n    const isEmail = validator.isEmail(email);\n    const isPasswordMatch = password === password2;\n    const validPasswordCharacters =\n      !password.includes(\"passwor\") && !password.includes(\"123456\");\n    if (isEmail && isPasswordMatch && validPasswordCharacters) {\n      props.register(name, email, password);\n    } else {\n      if (!isEmail) {\n        props.setAlert(\"Please enter a valid E-Mail Adresse\", \"danger\");\n      }\n      if (!isPasswordMatch) {\n        props.setAlert(\"Please enter matching passwords\", \"danger\");\n      }\n      if (!validPasswordCharacters) {\n        props.setAlert(\n          'Your password must not include \"123456\" or \"password\"',\n          \"danger\"\n        );\n      }\n    }\n  };\n\n  if (props.isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Sign Up</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Create Your Account\n      </p>\n      <form\n        className=\"form\"\n        onSubmit={event => {\n          onSubmit(event);\n        }}\n      >\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            name=\"name\"\n            value={name}\n            onChange={event => {\n              handleInputChange(event);\n            }}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Email Address\"\n            name=\"email\"\n            value={email}\n            onChange={event => {\n              handleInputChange(event);\n            }}\n          />\n          <small className=\"form-text\">\n            This site uses Gravatar so if you want a profile image, use a\n            Gravatar email\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={password}\n            onChange={event => {\n              handleInputChange(event);\n            }}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            name=\"password2\"\n            value={password2}\n            onChange={event => {\n              handleInputChange(event);\n            }}\n          />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n      </form>\n      <p className=\"my-1\">\n        Already have an account? <Link to=\"/login\">Sign In</Link>\n      </p>\n    </Fragment>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);\n"]},"metadata":{},"sourceType":"module"}