{"ast":null,"code":"import axios from \"axios\";\nimport * as types from \"./types\";\nimport { setAlert } from \"./alert\";\nexport const register = (name, email, password) => {\n  return async dispatch => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"applicatin/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/api/users/register\", {\n        name,\n        email,\n        password\n      }, config);\n      console.log(res);\n\n      if (res.status === 201) {\n        dispatch({\n          type: types.REGISTER_SUCCESS,\n          payload: res.data\n        });\n      }\n    } catch (error) {\n      console.error(error);\n      const errors = error.response.data.erros;\n\n      if (errors) {\n        errors.forEach(error => {\n          dispatch(setAlert(error.msg, \"danger\"));\n        });\n      }\n\n      dispatch({\n        type: types.REGISTER_FAIL\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/Users/niclastimm/Desktop/Udemy/MERN/DevConnector/client/src/store/actions/auth.js"],"names":["axios","types","setAlert","register","name","email","password","dispatch","config","headers","res","post","console","log","status","type","REGISTER_SUCCESS","payload","data","error","errors","response","erros","forEach","msg","REGISTER_FAIL"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,KAA2B;AACjD,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAMA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAN,CAChB,qBADgB,EAEhB;AACEP,QAAAA,IADF;AAEEC,QAAAA,KAFF;AAGEC,QAAAA;AAHF,OAFgB,EAOhBE,MAPgB,CAAlB;AASAI,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;;AAEA,UAAIA,GAAG,CAACI,MAAJ,KAAe,GAAnB,EAAwB;AACtBP,QAAAA,QAAQ,CAAC;AACPQ,UAAAA,IAAI,EAAEd,KAAK,CAACe,gBADL;AAEPC,UAAAA,OAAO,EAAEP,GAAG,CAACQ;AAFN,SAAD,CAAR;AAID;AACF,KAlBD,CAkBE,OAAOC,KAAP,EAAc;AACdP,MAAAA,OAAO,CAACO,KAAR,CAAcA,KAAd;AAEA,YAAMC,MAAM,GAAGD,KAAK,CAACE,QAAN,CAAeH,IAAf,CAAoBI,KAAnC;;AAEA,UAAIF,MAAJ,EAAY;AACVA,QAAAA,MAAM,CAACG,OAAP,CAAeJ,KAAK,IAAI;AACtBZ,UAAAA,QAAQ,CAACL,QAAQ,CAACiB,KAAK,CAACK,GAAP,EAAY,QAAZ,CAAT,CAAR;AACD,SAFD;AAGD;;AAEDjB,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAEd,KAAK,CAACwB;AADL,OAAD,CAAR;AAGD;AACF,GAxCD;AAyCD,CA1CM","sourcesContent":["import axios from \"axios\";\nimport * as types from \"./types\";\nimport { setAlert } from \"./alert\";\n\nexport const register = (name, email, password) => {\n  return async dispatch => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"applicatin/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\n        \"/api/users/register\",\n        {\n          name,\n          email,\n          password\n        },\n        config\n      );\n      console.log(res);\n\n      if (res.status === 201) {\n        dispatch({\n          type: types.REGISTER_SUCCESS,\n          payload: res.data\n        });\n      }\n    } catch (error) {\n      console.error(error);\n\n      const errors = error.response.data.erros;\n\n      if (errors) {\n        errors.forEach(error => {\n          dispatch(setAlert(error.msg, \"danger\"));\n        });\n      }\n\n      dispatch({\n        type: types.REGISTER_FAIL\n      });\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}