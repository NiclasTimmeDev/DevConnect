{"ast":null,"code":"var _jsxFileName = \"/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/components/dashboard/Dasboard.js\";\nimport React, { useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getCurrentProfile } from \"./../../store/actions/profile\";\nimport Spinner from \"./../layout/Spinner\";\nimport { Link } from \"react-router-dom\";\nimport DashboardActions from \"./DashboardActions\";\nimport Experience from \"./Experience\";\nimport Education from \"./Education\";\n\nconst Dasboard = props => {\n  useEffect(() => {\n    console.log(\"use effect\");\n    props.getCurrentProfile();\n  }, []);\n  const profile = React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(DashboardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), props.profile.profile && !props.profile.loading ? React.createElement(Experience, {\n    experiences: props.profile.profile.experience,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }) : null, props.profile.profile.education && !props.profile.loading ? React.createElement(Education, {\n    eduction: props.profile.profile.education,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }) : null);\n  const noProfile = React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"You have not yet created a profile. Please add some info\"), React.createElement(Link, {\n    to: \"/create-profile\",\n    className: \"btn btn-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Create Profile\"));\n  return props.profile.profile && props.profile.loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Dashboard\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), \" Welcome,\", \" \", props.auth.user && props.auth.user.name), props.profile.profile ? profile : noProfile);\n};\n\nDasboard.propTypes = {\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    profile: state.profile\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dasboard);","map":{"version":3,"sources":["/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/components/dashboard/Dasboard.js"],"names":["React","useEffect","Fragment","PropTypes","connect","getCurrentProfile","Spinner","Link","DashboardActions","Experience","Education","Dasboard","props","console","log","profile","loading","experience","education","noProfile","auth","user","name","propTypes","object","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getCurrentProfile } from \"./../../store/actions/profile\";\nimport Spinner from \"./../layout/Spinner\";\nimport { Link } from \"react-router-dom\";\nimport DashboardActions from \"./DashboardActions\";\nimport Experience from \"./Experience\";\nimport Education from \"./Education\";\n\nconst Dasboard = props => {\n  useEffect(() => {\n    console.log(\"use effect\");\n    props.getCurrentProfile();\n  }, []);\n\n  const profile = (\n    <Fragment>\n      <DashboardActions />\n      {props.profile.profile && !props.profile.loading ? (\n        <Experience experiences={props.profile.profile.experience} />\n      ) : null}\n      {props.profile.profile.education && !props.profile.loading ? (\n        <Education eduction={props.profile.profile.education} />\n      ) : null}\n    </Fragment>\n  );\n\n  const noProfile = (\n    <Fragment>\n      <p>You have not yet created a profile. Please add some info</p>\n      <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\n        Create Profile\n      </Link>\n    </Fragment>\n  );\n\n  return props.profile.profile && props.profile.loading ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 className=\"large text-primary\">Dashboard</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Welcome,{\" \"}\n        {props.auth.user && props.auth.user.name}\n      </p>\n      {props.profile.profile ? profile : noProfile}\n    </Fragment>\n  );\n};\n\nDasboard.propTypes = {\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    profile: state.profile\n  };\n};\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Dasboard);\n"]},"metadata":{},"sourceType":"module"}