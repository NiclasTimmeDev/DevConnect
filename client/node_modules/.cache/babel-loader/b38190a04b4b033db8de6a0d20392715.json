{"ast":null,"code":"var _jsxFileName = \"/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/components/posts/PostItem.js\";\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { addLike, removeLike, deletePost } from \"./../../store/actions/post\";\n\nconst PostItem = props => {\n  return React.createElement(\"div\", {\n    className: \"post bg-white p-1 my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: `/users/${props.post.user}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"round-img\",\n    src: props.post.avatar,\n    alt: \"avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, props.post.name))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.post.text), React.createElement(\"p\", {\n    className: \"post-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Posted on \", React.createElement(Moment, {\n    format: \"YYYY/MM/DD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, props.post.date)), React.createElement(\"button\", {\n    onClick: () => {\n      props.addLike(props.post._id);\n    },\n    type: \"button\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-thumbs-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), props.post.likes.length > 0 && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, props.post.likes.length)), React.createElement(\"button\", {\n    onClick: () => {\n      props.removeLike(props.post._id);\n    },\n    type: \"button\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-thumbs-down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(Link, {\n    to: `/posts/${props.post._id}`,\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Discussion\", \" \", props.post.comments.length > 0 && React.createElement(\"span\", {\n    className: \"comment-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, props.post.comments.length)), !props.auth.loading && props.auth.user._id === props.post.user && React.createElement(\"button\", {\n    onClick: () => {\n      props.deletePost(props.post._id);\n    },\n    type: \"button\",\n    className: \"btn btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))));\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Moment","connect","Link","addLike","removeLike","deletePost","PostItem","props","post","user","avatar","name","text","date","_id","likes","length","comments","auth","loading","propTypes","object","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { addLike, removeLike, deletePost } from \"./../../store/actions/post\";\n\nconst PostItem = props => {\n  return (\n    <div className=\"post bg-white p-1 my-1\">\n      <div>\n        <a href={`/users/${props.post.user}`}>\n          <img className=\"round-img\" src={props.post.avatar} alt=\"avatar\" />\n          <h4>{props.post.name}</h4>\n        </a>\n      </div>\n      <div>\n        <p className=\"my-1\">{props.post.text}</p>\n        <p className=\"post-date\">\n          Posted on {<Moment format=\"YYYY/MM/DD\">{props.post.date}</Moment>}\n        </p>\n        <button\n          onClick={() => {\n            props.addLike(props.post._id);\n          }}\n          type=\"button\"\n          className=\"btn btn-light\"\n        >\n          <i className=\"fas fa-thumbs-up\"></i>\n          {props.post.likes.length > 0 && (\n            <span>{props.post.likes.length}</span>\n          )}\n        </button>\n        <button\n          onClick={() => {\n            props.removeLike(props.post._id);\n          }}\n          type=\"button\"\n          className=\"btn btn-light\"\n        >\n          <i className=\"fas fa-thumbs-down\"></i>\n        </button>\n        <Link to={`/posts/${props.post._id}`} className=\"btn btn-primary\">\n          Discussion{\" \"}\n          {props.post.comments.length > 0 && (\n            <span className=\"comment-count\">{props.post.comments.length}</span>\n          )}\n        </Link>\n        {!props.auth.loading && props.auth.user._id === props.post.user && (\n          <button\n            onClick={() => {\n              props.deletePost(props.post._id);\n            }}\n            type=\"button\"\n            className=\"btn btn-danger\"\n          >\n            <i className=\"fas fa-times\"></i>\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\n  PostItem\n);\n"]},"metadata":{},"sourceType":"module"}