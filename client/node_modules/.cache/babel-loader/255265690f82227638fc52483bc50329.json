{"ast":null,"code":"var _jsxFileName = \"/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/components/dashboard/Experience.js\";\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteExperience } from \"./../../store/actions/profile\";\nimport Moment from \"react-moment\";\n\nconst Experience = props => {\n  console.log(props.experiences == []);\n  const experiences = props.experiences.map(exp => {\n    return React.createElement(\"tr\", {\n      key: exp._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, exp.company), React.createElement(\"td\", {\n      className: \"hide-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, exp.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(Moment, {\n      format: \"YYYY/MM/DD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, exp.from), \" -\", \" \", exp.to === null ? \" Now\" : React.createElement(Moment, {\n      format: \"YYYY/MM/DD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, exp.to)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        props.deleteExperience(exp._id);\n      },\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Delete\")));\n  });\n  const noExperiences = React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"You have not yet added any experience. Please add some info\");\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"my-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Experience Credentials\"), props.experiences ? noExperiences : React.createElement(\"table\", {\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Company\"), React.createElement(\"th\", {\n    className: \"hide-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Title\"), React.createElement(\"th\", {\n    className: \"hide-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Years\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, experiences)));\n};\n\nExperience.propTypes = {\n  experiences: PropTypes.array.isRequired,\n  deleteExperience: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  deleteExperience\n})(Experience);","map":{"version":3,"sources":["/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/components/dashboard/Experience.js"],"names":["React","Fragment","PropTypes","connect","deleteExperience","Moment","Experience","props","console","log","experiences","map","exp","_id","company","title","from","to","noExperiences","propTypes","array","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,WAAN,IAAqB,EAAjC;AACA,QAAMA,WAAW,GAAGH,KAAK,CAACG,WAAN,CAAkBC,GAAlB,CAAsBC,GAAG,IAAI;AAC/C,WACE;AAAI,MAAA,GAAG,EAAEA,GAAG,CAACC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,GAAG,CAACE,OAAT,CADF,EAEE;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBF,GAAG,CAACG,KAA7B,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BH,GAAG,CAACI,IAAjC,CADF,QACoD,GADpD,EAEGJ,GAAG,CAACK,EAAJ,KAAW,IAAX,GACC,MADD,GAGC,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BL,GAAG,CAACK,EAAjC,CALJ,CAHF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,OAAO,EAAE,MAAM;AACbV,QAAAA,KAAK,CAACH,gBAAN,CAAuBQ,GAAG,CAACC,GAA3B;AACD,OAHH;AAIE,MAAA,SAAS,EAAC,gBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAXF,CADF;AAwBD,GAzBmB,CAApB;AA2BA,QAAMK,aAAa,GACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEADF;AAIA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEGX,KAAK,CAACG,WAAN,GACCQ,aADD,GAGC;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQR,WAAR,CATF,CALJ,CADF;AAoBD,CArDD;;AAuDAJ,UAAU,CAACa,SAAX,GAAuB;AACrBT,EAAAA,WAAW,EAAER,SAAS,CAACkB,KAAV,CAAgBC,UADR;AAErBjB,EAAAA,gBAAgB,EAAEF,SAAS,CAACoB,IAAV,CAAeD;AAFZ,CAAvB;AAKA,eAAelB,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA;AAAF,CAAP,CAAP,CAAoCE,UAApC,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteExperience } from \"./../../store/actions/profile\";\nimport Moment from \"react-moment\";\n\nconst Experience = props => {\n  console.log(props.experiences == []);\n  const experiences = props.experiences.map(exp => {\n    return (\n      <tr key={exp._id}>\n        <td>{exp.company}</td>\n        <td className=\"hide-sm\">{exp.title}</td>\n        <td>\n          <Moment format=\"YYYY/MM/DD\">{exp.from}</Moment> -{\" \"}\n          {exp.to === null ? (\n            \" Now\"\n          ) : (\n            <Moment format=\"YYYY/MM/DD\">{exp.to}</Moment>\n          )}\n        </td>\n        <td>\n          <button\n            onClick={() => {\n              props.deleteExperience(exp._id);\n            }}\n            className=\"btn btn-danger\"\n          >\n            Delete\n          </button>\n        </td>\n      </tr>\n    );\n  });\n\n  const noExperiences = (\n    <p>You have not yet added any experience. Please add some info</p>\n  );\n\n  return (\n    <Fragment>\n      <h2 className=\"my-2\">Experience Credentials</h2>\n      {props.experiences ? (\n        noExperiences\n      ) : (\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Company</th>\n              <th className=\"hide-sm\">Title</th>\n              <th className=\"hide-sm\">Years</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>{experiences}</tbody>\n        </table>\n      )}\n    </Fragment>\n  );\n};\n\nExperience.propTypes = {\n  experiences: PropTypes.array.isRequired,\n  deleteExperience: PropTypes.func.isRequired\n};\n\nexport default connect(null, { deleteExperience })(Experience);\n"]},"metadata":{},"sourceType":"module"}