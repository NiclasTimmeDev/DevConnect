{"ast":null,"code":"var _jsxFileName = \"/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/components/post/Post.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"./../layout/Spinner\";\nimport { getPost } from \"./../../store/actions/post\";\nimport PostItem from \"./../posts/PostItem\";\nimport CommentForm from \"./CommentForm\";\nimport CommentItem from \"./CommentItem\";\nimport { Link } from \"react-router-dom\";\n\nconst Post = props => {\n  useEffect(() => {\n    props.getPost(props.match.params.id);\n  }, []); // const comments =\n  //   props.post.post.comments === [] ? (\n  //     <div>There are no comments yet. Be the first to make one!</div>\n  //   ) : (\n  //     props.post.post.comments.map(comment => {\n  //       return (\n  //         <CommentItem\n  //           key={comment._id}\n  //           comment={comment}\n  //           postId={props.match.params.id}\n  //         />\n  //       );\n  //     })\n  //   );\n\n  return props.post.loading || props.post.post === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: () => {\n      console.log(props.post.post.comments);\n    },\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"test\"), React.createElement(Link, {\n    to: \"/posts\",\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Back to Posts\"), React.createElement(PostItem, {\n    showActions: false,\n    post: props.post.post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(CommentForm, {\n    postId: props.match.params.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    post: state.post\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Post);","map":{"version":3,"sources":["/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/components/post/Post.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getPost","PostItem","CommentForm","CommentItem","Link","Post","props","match","params","id","post","loading","console","log","comments","propTypes","func","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AACpBV,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAACN,OAAN,CAAcM,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,EAAjC;AACD,GAFQ,EAEN,EAFM,CAAT,CADoB,CAKpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAOH,KAAK,CAACI,IAAN,CAAWC,OAAX,IAAsBL,KAAK,CAACI,IAAN,CAAWA,IAAX,KAAoB,IAA1C,GACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAGL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAE,MAAM;AACbE,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACI,IAAN,CAAWA,IAAX,CAAgBI,QAA5B;AACD,KAHH;AAIE,IAAA,SAAS,EAAC,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EASE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBATF,EAYE,oBAAC,QAAD;AAAU,IAAA,WAAW,EAAE,KAAvB;AAA8B,IAAA,IAAI,EAAER,KAAK,CAACI,IAAN,CAAWA,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAaE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEJ,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CAHF;AAoBD,CAxCD;;AA0CAJ,IAAI,CAACU,SAAL,GAAiB;AACff,EAAAA,OAAO,EAAEH,SAAS,CAACmB,IAAV,CAAeC;AADT,CAAjB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLT,IAAAA,IAAI,EAAES,KAAK,CAACT;AADP,GAAP;AAGD,CAJD;;AAMA,eAAeZ,OAAO,CAACoB,eAAD,EAAkB;AAAElB,EAAAA;AAAF,CAAlB,CAAP,CAAsCK,IAAtC,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"./../layout/Spinner\";\nimport { getPost } from \"./../../store/actions/post\";\nimport PostItem from \"./../posts/PostItem\";\nimport CommentForm from \"./CommentForm\";\nimport CommentItem from \"./CommentItem\";\nimport { Link } from \"react-router-dom\";\n\nconst Post = props => {\n  useEffect(() => {\n    props.getPost(props.match.params.id);\n  }, []);\n\n  // const comments =\n  //   props.post.post.comments === [] ? (\n  //     <div>There are no comments yet. Be the first to make one!</div>\n  //   ) : (\n  //     props.post.post.comments.map(comment => {\n  //       return (\n  //         <CommentItem\n  //           key={comment._id}\n  //           comment={comment}\n  //           postId={props.match.params.id}\n  //         />\n  //       );\n  //     })\n  //   );\n\n  return props.post.loading || props.post.post === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <div\n        onClick={() => {\n          console.log(props.post.post.comments);\n        }}\n        className=\"btn\"\n      >\n        test\n      </div>\n      <Link to=\"/posts\" className=\"btn\">\n        Back to Posts\n      </Link>\n      <PostItem showActions={false} post={props.post.post} />\n      <CommentForm postId={props.match.params.id} />\n      {/* <div className=\"comments\">{comments}</div> */}\n    </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    post: state.post\n  };\n};\n\nexport default connect(mapStateToProps, { getPost })(Post);\n"]},"metadata":{},"sourceType":"module"}