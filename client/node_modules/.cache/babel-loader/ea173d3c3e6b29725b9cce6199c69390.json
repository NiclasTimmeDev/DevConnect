{"ast":null,"code":"var _jsxFileName = \"/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/components/profile/Profile.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getProfileById } from \"./../../store/actions/profile\";\n\nconst Profile = props => {\n  useEffect(() => {\n    props.getProfileById(props.match.params.id);\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, !props.profile || loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"profile\"));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.profile,\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfileById","Profile","props","match","params","id","profile","loading","propTypes","func","isRequired","object","auth","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,+BAA/B;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACvBN,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAACF,cAAN,CAAqBE,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,EAAxC;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACH,KAAK,CAACI,OAAP,IAAkBC,OAAlB,GAA4B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5B,GAA0C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAD7C,CADF;AAKD,CATD;;AAWAN,OAAO,CAACO,SAAR,GAAoB;AAClBR,EAAAA,cAAc,EAAEH,SAAS,CAACY,IAAV,CAAeC,UADb;AAElBJ,EAAAA,OAAO,EAAET,SAAS,CAACc,MAAV,CAAiBD,UAFR;AAGlBE,EAAAA,IAAI,EAAEf,SAAS,CAACc,MAAV,CAAiBD;AAHL,CAApB;;AAMA,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLR,IAAAA,OAAO,EAAEQ,KAAK,CAACR,OADV;AAELM,IAAAA,IAAI,EAAEE,KAAK,CAACF;AAFP,GAAP;AAID,CALD;;AAOA,eAAed,OAAO,CAACe,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAA6CC,OAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getProfileById } from \"./../../store/actions/profile\";\n\nconst Profile = props => {\n  useEffect(() => {\n    props.getProfileById(props.match.params.id);\n  }, []);\n  return (\n    <Fragment>\n      {!props.profile || loading ? <Spinner /> : <Fragment>profile</Fragment>}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.profile,\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n"]},"metadata":{},"sourceType":"module"}