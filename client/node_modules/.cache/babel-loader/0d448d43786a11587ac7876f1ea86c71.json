{"ast":null,"code":"import axios from \"axios\";\nimport * as types from \"./types\";\nimport { setAlert } from \"./alert\";\naxios.defaults.proxy = \"http://localhost\";\naxios.defaults.proxy.port = \"5000\";\nexport const register = (name, email, password) => {\n  return async dispatch => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"applicatin/json\"\n      }\n    };\n    const body = JSON.stringify({\n      name,\n      email,\n      password\n    });\n\n    try {\n      const res = await axios.post(\"/users/register\", body, config);\n      console.log(res);\n\n      if (res.status === 201) {\n        dispatch({\n          type: types.REGISTER_SUCCESS,\n          payload: res.data\n        });\n      }\n    } catch (error) {\n      console.error(error.message);\n      const errors = error.response.data.erros;\n\n      if (errors) {\n        errors.forEach(error => {\n          dispatch(setAlert(error.msg, \"danger\"));\n        });\n      }\n\n      dispatch({\n        type: types.REGISTER_FAIL\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/Users/niclastimm/Desktop/Udemy/MERN/DevConnector/client/src/store/actions/auth.js"],"names":["axios","types","setAlert","defaults","proxy","port","register","name","email","password","dispatch","config","headers","body","JSON","stringify","res","post","console","log","status","type","REGISTER_SUCCESS","payload","data","error","message","errors","response","erros","forEach","msg","REGISTER_FAIL"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEAF,KAAK,CAACG,QAAN,CAAeC,KAAf,GAAuB,kBAAvB;AACAJ,KAAK,CAACG,QAAN,CAAeC,KAAf,CAAqBC,IAArB,GAA4B,MAA5B;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,KAA2B;AACjD,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAMA,UAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAER,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAAf,CAAb;;AACA,QAAI;AACF,YAAMO,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAAW,iBAAX,EAA8BJ,IAA9B,EAAoCF,MAApC,CAAlB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;;AAEA,UAAIA,GAAG,CAACI,MAAJ,KAAe,GAAnB,EAAwB;AACtBV,QAAAA,QAAQ,CAAC;AACPW,UAAAA,IAAI,EAAEpB,KAAK,CAACqB,gBADL;AAEPC,UAAAA,OAAO,EAAEP,GAAG,CAACQ;AAFN,SAAD,CAAR;AAID;AACF,KAVD,CAUE,OAAOC,KAAP,EAAc;AACdP,MAAAA,OAAO,CAACO,KAAR,CAAcA,KAAK,CAACC,OAApB;AAEA,YAAMC,MAAM,GAAGF,KAAK,CAACG,QAAN,CAAeJ,IAAf,CAAoBK,KAAnC;;AAEA,UAAIF,MAAJ,EAAY;AACVA,QAAAA,MAAM,CAACG,OAAP,CAAeL,KAAK,IAAI;AACtBf,UAAAA,QAAQ,CAACR,QAAQ,CAACuB,KAAK,CAACM,GAAP,EAAY,QAAZ,CAAT,CAAR;AACD,SAFD;AAGD;;AAEDrB,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAEpB,KAAK,CAAC+B;AADL,OAAD,CAAR;AAGD;AACF,GAjCD;AAkCD,CAnCM","sourcesContent":["import axios from \"axios\";\nimport * as types from \"./types\";\nimport { setAlert } from \"./alert\";\n\naxios.defaults.proxy = \"http://localhost\";\naxios.defaults.proxy.port = \"5000\";\n\nexport const register = (name, email, password) => {\n  return async dispatch => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"applicatin/json\"\n      }\n    };\n\n    const body = JSON.stringify({ name, email, password });\n    try {\n      const res = await axios.post(\"/users/register\", body, config);\n      console.log(res);\n\n      if (res.status === 201) {\n        dispatch({\n          type: types.REGISTER_SUCCESS,\n          payload: res.data\n        });\n      }\n    } catch (error) {\n      console.error(error.message);\n\n      const errors = error.response.data.erros;\n\n      if (errors) {\n        errors.forEach(error => {\n          dispatch(setAlert(error.msg, \"danger\"));\n        });\n      }\n\n      dispatch({\n        type: types.REGISTER_FAIL\n      });\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}