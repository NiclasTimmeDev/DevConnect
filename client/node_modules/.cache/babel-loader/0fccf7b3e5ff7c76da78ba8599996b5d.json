{"ast":null,"code":"import axios from \"axios\";\nimport * as types from \"./types\";\nimport setAlert from \"./alert\";\nexport const getCurrentProfile = () => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(\"/api/profile/me\");\n      dispatch({\n        type: types.GET_PROFILE,\n        payload: res.data\n      });\n    } catch (error) {\n      console.error(error.message);\n      dispatch({\n        type: types.PROFILE_ERROR,\n        payload: {\n          msg: error.response.statusText,\n          status: error.response.status\n        }\n      });\n    }\n  };\n};\nexport const getAllProfiles = () => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(\"/api/profile/all\");\n\n      if (res.status === 200) {\n        dispatch({\n          type: types.GET_PROFILES,\n          payload: res.data\n        });\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n};\nexport const getProfileById = userId => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(`/api/profile/${userId}`);\n\n      if (res.status === 200) {\n        dispatch({\n          type: types.GET_PROFILES,\n          payload: res.data\n        });\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n};\nexport const createProfile = (formData, history, edit = false) => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(\"/api/profile/me\", formData);\n      dispatch({\n        type: types.GET_PROFILE,\n        payload: res.data\n      });\n      dispatch(setAlert(edit ? \"Profile updated\" : \"Profile created\", \"success\"));\n\n      if (!edit) {\n        history.push(\"/dashboard\");\n      }\n    } catch (error) {\n      console.error(error.message);\n      const errors = error.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => {\n          dispatch(setAlert(error.msg, \"danger\"));\n        });\n      }\n\n      dispatch({\n        type: types.PROFILE_ERROR,\n        payload: {\n          msg: error.response.statusText,\n          status: error.response.status\n        }\n      });\n    }\n  };\n};\nexport const addExperience = (formData, history) => {\n  return async dispatch => {\n    try {\n      const res = await axios.put(\"/api/profile/experience\", formData);\n      dispatch({\n        type: types.UPDATE_PROFILE,\n        payload: res.data\n      });\n      dispatch(setAlert(\"Experience added\", \"success\"));\n      history.push(\"/dashboard\");\n    } catch (error) {\n      console.error(error.message);\n      const errors = error.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => {\n          dispatch(setAlert(error.msg, \"danger\"));\n        });\n      }\n\n      dispatch({\n        type: types.PROFILE_ERROR,\n        payload: {\n          msg: error.response.statusText,\n          status: error.response.status\n        }\n      });\n    }\n  };\n};\nexport const addEducation = (formData, history) => {\n  return async dispatch => {\n    try {\n      const res = await axios.put(\"/api/profile/education\", formData);\n      dispatch({\n        type: types.UPDATE_PROFILE,\n        payload: res.data\n      });\n      dispatch(setAlert(\"Education added\", \"success\"));\n      history.push(\"/dashboard\");\n    } catch (error) {\n      console.error(error.message);\n      const errors = error.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => {\n          dispatch(setAlert(error.msg, \"danger\"));\n        });\n      }\n\n      dispatch({\n        type: types.PROFILE_ERROR,\n        payload: {\n          msg: error.response.statusText,\n          status: error.response.status\n        }\n      });\n    }\n  };\n};\nexport const deleteExperience = id => {\n  return async dispatch => {\n    try {\n      const res = await axios.delete(`/api/profile/experience/${id}`);\n      dispatch({\n        type: types.UPDATE_PROFILE,\n        payload: res.data\n      });\n      dispatch(setAlert(\"Experience deleted\", \"success\"));\n    } catch (error) {\n      console.log(error.message);\n      dispatch(setAlert(\"Sorry, something went wrong. Try again!\"));\n    }\n  };\n};\nexport const deleteEducation = id => {\n  return async dispatch => {\n    try {\n      const res = await axios.delete(`/api/profile/education/${id}`);\n      dispatch({\n        type: types.UPDATE_PROFILE,\n        payload: res.data\n      });\n      dispatch(setAlert(\"Education deleted\", \"success\"));\n    } catch (error) {\n      console.log(error.message);\n      dispatch(setAlert(\"Sorry, something went wrong. Try again!\"));\n    }\n  };\n};\nexport const deleteAccount = () => {\n  return async dispatch => {\n    if (window.confirm(\"Are you sure? This can NOT be undone\")) {\n      try {\n        const res = await axios.delete(`/api/profile`);\n        dispatch({\n          type: types.CLEAR_PROFILE\n        });\n        dispatch({\n          type: types.ACCOUNT_DELETED\n        });\n        dispatch(setAlert(\"Your Account has been deleted\", \"success\"));\n      } catch (error) {\n        console.log(error.message);\n        dispatch(setAlert(\"Sorry, something went wrong. Try again!\"));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/store/actions/profile.js"],"names":["axios","types","setAlert","getCurrentProfile","dispatch","res","get","type","GET_PROFILE","payload","data","error","console","message","PROFILE_ERROR","msg","response","statusText","status","getAllProfiles","GET_PROFILES","log","getProfileById","userId","createProfile","formData","history","edit","post","push","errors","forEach","addExperience","put","UPDATE_PROFILE","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm","CLEAR_PROFILE","ACCOUNT_DELETED"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport * as types from \"./types\";\nimport setAlert from \"./alert\";\n\nexport const getCurrentProfile = () => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(\"/api/profile/me\");\n      dispatch({\n        type: types.GET_PROFILE,\n        payload: res.data\n      });\n    } catch (error) {\n      console.error(error.message);\n      dispatch({\n        type: types.PROFILE_ERROR,\n        payload: {\n          msg: error.response.statusText,\n          status: error.response.status\n        }\n      });\n    }\n  };\n};\n\nexport const getAllProfiles = () => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(\"/api/profile/all\");\n      if (res.status === 200) {\n        dispatch({\n          type: types.GET_PROFILES,\n          payload: res.data\n        });\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n};\nexport const getProfileById = userId => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(`/api/profile/${userId}`);\n      if (res.status === 200) {\n        dispatch({\n          type: types.GET_PROFILES,\n          payload: res.data\n        });\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n};\n\nexport const createProfile = (formData, history, edit = false) => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(\"/api/profile/me\", formData);\n      dispatch({\n        type: types.GET_PROFILE,\n        payload: res.data\n      });\n\n      dispatch(\n        setAlert(edit ? \"Profile updated\" : \"Profile created\", \"success\")\n      );\n\n      if (!edit) {\n        history.push(\"/dashboard\");\n      }\n    } catch (error) {\n      console.error(error.message);\n      const errors = error.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => {\n          dispatch(setAlert(error.msg, \"danger\"));\n        });\n      }\n      dispatch({\n        type: types.PROFILE_ERROR,\n        payload: {\n          msg: error.response.statusText,\n          status: error.response.status\n        }\n      });\n    }\n  };\n};\n\nexport const addExperience = (formData, history) => {\n  return async dispatch => {\n    try {\n      const res = await axios.put(\"/api/profile/experience\", formData);\n      dispatch({\n        type: types.UPDATE_PROFILE,\n        payload: res.data\n      });\n\n      dispatch(setAlert(\"Experience added\", \"success\"));\n\n      history.push(\"/dashboard\");\n    } catch (error) {\n      console.error(error.message);\n      const errors = error.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => {\n          dispatch(setAlert(error.msg, \"danger\"));\n        });\n      }\n      dispatch({\n        type: types.PROFILE_ERROR,\n        payload: {\n          msg: error.response.statusText,\n          status: error.response.status\n        }\n      });\n    }\n  };\n};\n\nexport const addEducation = (formData, history) => {\n  return async dispatch => {\n    try {\n      const res = await axios.put(\"/api/profile/education\", formData);\n      dispatch({\n        type: types.UPDATE_PROFILE,\n        payload: res.data\n      });\n\n      dispatch(setAlert(\"Education added\", \"success\"));\n\n      history.push(\"/dashboard\");\n    } catch (error) {\n      console.error(error.message);\n      const errors = error.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => {\n          dispatch(setAlert(error.msg, \"danger\"));\n        });\n      }\n      dispatch({\n        type: types.PROFILE_ERROR,\n        payload: {\n          msg: error.response.statusText,\n          status: error.response.status\n        }\n      });\n    }\n  };\n};\n\nexport const deleteExperience = id => {\n  return async dispatch => {\n    try {\n      const res = await axios.delete(`/api/profile/experience/${id}`);\n      dispatch({\n        type: types.UPDATE_PROFILE,\n        payload: res.data\n      });\n      dispatch(setAlert(\"Experience deleted\", \"success\"));\n    } catch (error) {\n      console.log(error.message);\n      dispatch(setAlert(\"Sorry, something went wrong. Try again!\"));\n    }\n  };\n};\n\nexport const deleteEducation = id => {\n  return async dispatch => {\n    try {\n      const res = await axios.delete(`/api/profile/education/${id}`);\n      dispatch({\n        type: types.UPDATE_PROFILE,\n        payload: res.data\n      });\n      dispatch(setAlert(\"Education deleted\", \"success\"));\n    } catch (error) {\n      console.log(error.message);\n      dispatch(setAlert(\"Sorry, something went wrong. Try again!\"));\n    }\n  };\n};\n\nexport const deleteAccount = () => {\n  return async dispatch => {\n    if (window.confirm(\"Are you sure? This can NOT be undone\")) {\n      try {\n        const res = await axios.delete(`/api/profile`);\n        dispatch({\n          type: types.CLEAR_PROFILE\n        });\n        dispatch({\n          type: types.ACCOUNT_DELETED\n        });\n        dispatch(setAlert(\"Your Account has been deleted\", \"success\"));\n      } catch (error) {\n        console.log(error.message);\n        dispatch(setAlert(\"Sorry, something went wrong. Try again!\"));\n      }\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}