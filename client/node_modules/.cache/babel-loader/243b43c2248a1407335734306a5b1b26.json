{"ast":null,"code":"var _jsxFileName = \"/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/components/post/CommentItem.js\";\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteComment } from \"./../../store/actions/post\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\n\nconst CommentItem = props => {\n  return React.createElement(\"div\", {\n    class: \"post bg-white p-1 my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/profiles/${props.comment.user}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"round-img\",\n    src: props.comment.avatar,\n    alt: \"avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, props.comment.name))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.comment.text), React.createElement(\"p\", {\n    className: \"post-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Posted on \", React.createElement(Moment, {\n    format: \"YYY/MM/DD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, props.comment.date)), !props.auth.loading && props.comment.user === props.auth.user._id && React.createElement(\"button\", {\n    onClick: () => {\n      deleteComment(props.postId);\n    },\n    className: \"btn btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }))));\n};\n\nCommentItem.propTypes = {\n  postId: PropTypes.number.isRequired,\n  auth: PropTypes.object.isRequired,\n  comment: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  deleteComment\n})(CommentItem);","map":{"version":3,"sources":["/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/components/post/CommentItem.js"],"names":["React","Fragment","PropTypes","connect","deleteComment","Link","Moment","CommentItem","props","comment","user","avatar","name","text","date","auth","loading","_id","postId","propTypes","number","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,SACE;AAAK,IAAA,KAAK,EAAC,wBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,aAAYA,KAAK,CAACC,OAAN,CAAcC,IAAK,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEF,KAAK,CAACC,OAAN,CAAcE,MAA9C;AAAsD,IAAA,GAAG,EAAC,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAK,CAACC,OAAN,CAAcG,IAAnB,CAFF,CADF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBJ,KAAK,CAACC,OAAN,CAAcI,IAAnC,CADF,EAEE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACY,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BL,KAAK,CAACC,OAAN,CAAcK,IAA1C,CADZ,CAFF,EAKG,CAACN,KAAK,CAACO,IAAN,CAAWC,OAAZ,IAAuBR,KAAK,CAACC,OAAN,CAAcC,IAAd,KAAuBF,KAAK,CAACO,IAAN,CAAWL,IAAX,CAAgBO,GAA9D,IACC;AACE,IAAA,OAAO,EAAE,MAAM;AACbb,MAAAA,aAAa,CAACI,KAAK,CAACU,MAAP,CAAb;AACD,KAHH;AAIE,IAAA,SAAS,EAAC,gBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CANJ,CAPF,CADF;AA0BD,CA3BD;;AA6BAX,WAAW,CAACY,SAAZ,GAAwB;AACtBD,EAAAA,MAAM,EAAEhB,SAAS,CAACkB,MAAV,CAAiBC,UADH;AAEtBN,EAAAA,IAAI,EAAEb,SAAS,CAACoB,MAAV,CAAiBD,UAFD;AAGtBZ,EAAAA,OAAO,EAAEP,SAAS,CAACoB,MAAV,CAAiBD;AAHJ,CAAxB;;AAMA,MAAME,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLT,IAAAA,IAAI,EAAES,KAAK,CAACT;AADP,GAAP;AAGD,CAJD;;AAMA,eAAeZ,OAAO,CAACoB,eAAD,EAAkB;AAAEnB,EAAAA;AAAF,CAAlB,CAAP,CAA4CG,WAA5C,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteComment } from \"./../../store/actions/post\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\n\nconst CommentItem = props => {\n  return (\n    <div class=\"post bg-white p-1 my-1\">\n      <div>\n        <Link to={`/profiles/${props.comment.user}`}>\n          <img className=\"round-img\" src={props.comment.avatar} alt=\"avatar\" />\n          <h4>{props.comment.name}</h4>\n        </Link>\n      </div>\n      <div>\n        <p className=\"my-1\">{props.comment.text}</p>\n        <p className=\"post-date\">\n          Posted on <Moment format=\"YYY/MM/DD\">{props.comment.date}</Moment>\n        </p>\n        {!props.auth.loading && props.comment.user === props.auth.user._id && (\n          <button\n            onClick={() => {\n              deleteComment(props.postId);\n            }}\n            className=\"btn btn-danger\"\n          >\n            <i className=\"fas fa-time\"></i>\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nCommentItem.propTypes = {\n  postId: PropTypes.number.isRequired,\n  auth: PropTypes.object.isRequired,\n  comment: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\n"]},"metadata":{},"sourceType":"module"}