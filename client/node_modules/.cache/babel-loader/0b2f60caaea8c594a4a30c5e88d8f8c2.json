{"ast":null,"code":"var _jsxFileName = \"/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/components/profile/Profile.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getProfileById } from \"./../../store/actions/profile\";\nimport { Link } from \"react-router-dom\";\nimport ProfileTop from \"./ProfileTop\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport Experience from \"./Experience\";\nimport Education from \"./Education\";\n\nconst Profile = props => {\n  useEffect(() => {\n    props.getProfileById(props.match.params.id);\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, !props.profile || props.profile.loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, props.auth.isAuthenticated && !props.auth.loading && props.auth.user._id.toString() === props.match.params.id ? React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Edit Profile\") : null, React.createElement(\"div\", {\n    className: \"profile-grid my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(ProfileTop, {\n    profile: props.profile.profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(ProfileAbout, {\n    profile: props.profile.profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"profile-exp bg-white-p-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, props.profile.profile.experience.length > 0 && props.profile.profile.experience.map(exp => {\n    return React.createElement(Experience, {\n      key: exp._id,\n      experience: exp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  }), props.profile.profile.education.length > 0 && props.profile.profile.education.map(edu => {\n    return React.createElement(Education, {\n      key: edu._id,\n      education: exp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  })))));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.profile,\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfileById","Link","ProfileTop","ProfileAbout","Experience","Education","Profile","props","match","params","id","profile","loading","auth","isAuthenticated","user","_id","toString","experience","length","map","exp","education","edu","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getProfileById } from \"./../../store/actions/profile\";\nimport { Link } from \"react-router-dom\";\nimport ProfileTop from \"./ProfileTop\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport Experience from \"./Experience\";\nimport Education from \"./Education\";\n\nconst Profile = props => {\n  useEffect(() => {\n    props.getProfileById(props.match.params.id);\n  }, []);\n  return (\n    <Fragment>\n      {!props.profile || props.profile.loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          {props.auth.isAuthenticated &&\n          !props.auth.loading &&\n          props.auth.user._id.toString() === props.match.params.id ? (\n            <Link to=\"/edit-profile\" className=\"btn btn-dark\">\n              Edit Profile\n            </Link>\n          ) : null}\n          <div className=\"profile-grid my-1\">\n            <ProfileTop profile={props.profile.profile} />\n            <ProfileAbout profile={props.profile.profile} />\n            <div className=\"profile-exp bg-white-p-2\">\n              {props.profile.profile.experience.length > 0 &&\n                props.profile.profile.experience.map(exp => {\n                  return <Experience key={exp._id} experience={exp} />;\n                })}\n              {props.profile.profile.education.length > 0 &&\n                props.profile.profile.education.map(edu => {\n                  return <Education key={edu._id} education={exp} />;\n                })}\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.profile,\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n"]},"metadata":{},"sourceType":"module"}