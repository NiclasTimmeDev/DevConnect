{"ast":null,"code":"import axios from \"axios\";\nimport * as types from \"./types\";\nimport { setAlert } from \"./alert\";\n\nconst register = async (name, email, password) => {\n  return async dispatch => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"applicatin/json\"\n      }\n    };\n    const body = JSON.stringify({\n      name,\n      email,\n      password\n    });\n\n    try {\n      const res = await axios.post(\"/api/users/register\", body.config);\n\n      if (res.status === 201) {\n        dispatch({\n          type: types.REGISTER_SUCCESS,\n          payload: res.data\n        });\n      }\n    } catch (error) {\n      console.error(error.message);\n      const errors = error.response.data.erros;\n\n      if (errors) {\n        errors.forEach(error => {\n          dispatch(setAlert(error.msg, \"danger\"));\n        });\n      }\n\n      dispatch({\n        type: types.REGISTER_FAIL\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/Users/niclastimm/Desktop/Udemy/MERN/DevConnector/client/src/store/actions/auth.js"],"names":["axios","types","setAlert","register","name","email","password","dispatch","config","headers","body","JSON","stringify","res","post","status","type","REGISTER_SUCCESS","payload","data","error","console","message","errors","response","erros","forEach","msg","REGISTER_FAIL"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AACA,SAASC,QAAT,QAAyB,SAAzB;;AAEA,MAAMC,QAAQ,GAAG,OAAOC,IAAP,EAAaC,KAAb,EAAoBC,QAApB,KAAiC;AAChD,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAMA,UAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAER,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAAf,CAAb;;AACA,QAAI;AACF,YAAMO,GAAG,GAAG,MAAMb,KAAK,CAACc,IAAN,CAAW,qBAAX,EAAkCJ,IAAI,CAACF,MAAvC,CAAlB;;AAEA,UAAIK,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtBR,QAAAA,QAAQ,CAAC;AACPS,UAAAA,IAAI,EAAEf,KAAK,CAACgB,gBADL;AAEPC,UAAAA,OAAO,EAAEL,GAAG,CAACM;AAFN,SAAD,CAAR;AAID;AACF,KATD,CASE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAK,CAACE,OAApB;AAEA,YAAMC,MAAM,GAAGH,KAAK,CAACI,QAAN,CAAeL,IAAf,CAAoBM,KAAnC;;AAEA,UAAIF,MAAJ,EAAY;AACVA,QAAAA,MAAM,CAACG,OAAP,CAAeN,KAAK,IAAI;AACtBb,UAAAA,QAAQ,CAACL,QAAQ,CAACkB,KAAK,CAACO,GAAP,EAAY,QAAZ,CAAT,CAAR;AACD,SAFD;AAGD;;AAEDpB,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAEf,KAAK,CAAC2B;AADL,OAAD,CAAR;AAGD;AACF,GAhCD;AAiCD,CAlCD","sourcesContent":["import axios from \"axios\";\nimport * as types from \"./types\";\nimport { setAlert } from \"./alert\";\n\nconst register = async (name, email, password) => {\n  return async dispatch => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"applicatin/json\"\n      }\n    };\n\n    const body = JSON.stringify({ name, email, password });\n    try {\n      const res = await axios.post(\"/api/users/register\", body.config);\n\n      if (res.status === 201) {\n        dispatch({\n          type: types.REGISTER_SUCCESS,\n          payload: res.data\n        });\n      }\n    } catch (error) {\n      console.error(error.message);\n\n      const errors = error.response.data.erros;\n\n      if (errors) {\n        errors.forEach(error => {\n          dispatch(setAlert(error.msg, \"danger\"));\n        });\n      }\n\n      dispatch({\n        type: types.REGISTER_FAIL\n      });\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}