{"ast":null,"code":"var _jsxFileName = \"/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/components/profile/Profile.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getProfileById } from \"./../../store/actions/profile\";\nimport { Link } from \"react-router-dom\";\nimport ProfileTop from \"./ProfileTop\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport Experience from \"./Experience\";\n\nconst Profile = props => {\n  useEffect(() => {\n    console.log(props.auth);\n    props.getProfileById(props.match.params.id);\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, !props.profile || props.profile.loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, props.auth.isAuthenticated && !props.auth.loading && props.auth.user._id.toString() === props.match.params.id ? React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Edit Profile\") : null, React.createElement(\"div\", {\n    className: \"profile-grid my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(ProfileTop, {\n    profile: props.profile.profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(ProfileAbout, {\n    profile: props.profile.profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"profile-exp bg-white-p-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, props.profile.experience.length > 0 && props.profile.experience.map((exp, i) => {\n    return React.createElement(Experience, {\n      key: exp._id,\n      experience: exp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  })))));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.profile,\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfileById","Link","ProfileTop","ProfileAbout","Experience","Profile","props","console","log","auth","match","params","id","profile","loading","isAuthenticated","user","_id","toString","experience","length","map","exp","i","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getProfileById } from \"./../../store/actions/profile\";\nimport { Link } from \"react-router-dom\";\nimport ProfileTop from \"./ProfileTop\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport Experience from \"./Experience\";\n\nconst Profile = props => {\n  useEffect(() => {\n    console.log(props.auth);\n    props.getProfileById(props.match.params.id);\n  }, []);\n  return (\n    <Fragment>\n      {!props.profile || props.profile.loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          {props.auth.isAuthenticated &&\n          !props.auth.loading &&\n          props.auth.user._id.toString() === props.match.params.id ? (\n            <Link to=\"/edit-profile\" className=\"btn btn-dark\">\n              Edit Profile\n            </Link>\n          ) : null}\n          <div className=\"profile-grid my-1\">\n            <ProfileTop profile={props.profile.profile} />\n            <ProfileAbout profile={props.profile.profile} />\n            <div className=\"profile-exp bg-white-p-2\">\n              {props.profile.experience.length > 0 &&\n                props.profile.experience.map((exp, i) => {\n                  return <Experience key={exp._id} experience={exp} />;\n                })}\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.profile,\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n"]},"metadata":{},"sourceType":"module"}