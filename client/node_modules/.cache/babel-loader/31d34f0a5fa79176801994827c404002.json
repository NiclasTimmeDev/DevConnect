{"ast":null,"code":"var _jsxFileName = \"/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/components/profile-forms/CreateProfile.js\";\nimport React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProfile } from \"./../../store/actions/profile\";\nimport { withRouter } from \"react-router-dom\";\n\nconst CreateProfile = props => {\n  const [formData, setFormData] = useState({\n    company: \"\",\n    website: \"\",\n    location: \"\",\n    status: \"\",\n    skills: \"\",\n    githubusername: \"\",\n    bio: \"\",\n    twitter: \"\",\n    facebook: \"\",\n    linkedin: \"\",\n    youtube: \"\",\n    instagram: \"\"\n  });\n\n  const onSubmit = event => {\n    const edit = props.profile ? true : false;\n    event.preventDefault();\n    console.log(formData);\n    props.createProfile(formData, props.history, edit);\n  };\n\n  const [displaySocials, setSocials] = useState(false);\n\n  const onChange = event => {\n    setFormData({ ...formData,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const fields = [{\n    placeholder: \"Company\",\n    name: \"company\",\n    text: \"Could be your own company or one you work for\"\n  }, {\n    placeholder: \"Website\",\n    name: \"website\",\n    text: \"Could be your own or a company website\"\n  }, {\n    placeholder: \"Location\",\n    name: \"location\",\n    text: \"City & state suggested (eg. Hamburg, Germany)\"\n  }, {\n    placeholder: \"+ Skills\",\n    name: \"skills\",\n    text: \"Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\"\n  }, {\n    placeholder: \"Github Username\",\n    name: \"githubusername\",\n    text: \"If you want your latest repos and a Github link, include your username\"\n  }];\n  const formGroup = fields.map((field, i) => {\n    return React.createElement(\"div\", {\n      className: \"form-group\",\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: field.placeholder,\n      name: field.name,\n      value: formData[field.name],\n      onChange: event => {\n        onChange(event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"small\", {\n      className: \"form-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, field.text));\n  });\n  const socialFields = [{\n    className: \"fab fa-twitter fa-2x\",\n    placeholder: \"Twitter URL\",\n    name: \"twitter\"\n  }, {\n    className: \"fab fa-facebook fa-2x\",\n    placeholder: \"Facebook URL\",\n    name: \"facebook\"\n  }, {\n    className: \"fab fa-youtube fa-2x\",\n    placeholder: \"YouTube URL\",\n    name: \"youtube\"\n  }, {\n    className: \"fab fa-instagram fa-2x\",\n    placeholder: \"Instagram URL\",\n    name: \"instagram\"\n  }, {\n    className: \"fab fa-linkedin fa-2x\",\n    placeholder: \"LinkedIn URL\",\n    name: \"linkedin\"\n  }];\n  const socialFormGroup = socialFields.map((field, i) => {\n    return React.createElement(\"div\", {\n      className: \"form-group social-input\",\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: field.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: field.placeholder,\n      name: field.name,\n      value: formData[field.name],\n      onChange: event => {\n        onChange(event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }));\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Create Your Profile\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), \" Let's get some information to make your profile stand out\"), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"* = required field\"), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: event => {\n      onSubmit(event);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    name: \"status\",\n    value: formData.status,\n    onChange: event => {\n      onChange(event);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"* Select Professional Status\"), React.createElement(\"option\", {\n    value: \"Developer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Developer\"), React.createElement(\"option\", {\n    value: \"Junior Developer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Junior Developer\"), React.createElement(\"option\", {\n    value: \"Senior Developer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Senior Developer\"), React.createElement(\"option\", {\n    value: \"Manager\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Manager\"), React.createElement(\"option\", {\n    value: \"Student or Learning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Student or Learning\"), React.createElement(\"option\", {\n    value: \"Instructor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Instructor or Teacher\"), React.createElement(\"option\", {\n    value: \"Intern\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Intern\"), React.createElement(\"option\", {\n    value: \"Other\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Other\")), React.createElement(\"small\", {\n    className: \"form-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Give us an idea of where you are at in your career\")), formGroup, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    onChange: event => {\n      onChange(event);\n    },\n    value: formData.bio,\n    placeholder: \"A short bio of yourself\",\n    name: \"bio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    className: \"form-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Tell us a little about yourself\")), React.createElement(\"div\", {\n    className: \"my-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-light\",\n    onClick: () => {\n      setSocials(!displaySocials);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Add Social Network Links\")), displaySocials && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, socialFormGroup), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }), React.createElement(\"a\", {\n    className: \"btn btn-light my-1\",\n    href: \"dashboard.html\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"Go Back\")));\n};\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.profile.profile\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createProfile\n})(withRouter(CreateProfile));","map":{"version":3,"sources":["/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/components/profile-forms/CreateProfile.js"],"names":["React","Fragment","useState","PropTypes","connect","createProfile","withRouter","CreateProfile","props","formData","setFormData","company","website","location","status","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","onSubmit","event","edit","profile","preventDefault","console","log","history","displaySocials","setSocials","onChange","target","name","value","fields","placeholder","text","formGroup","map","field","i","socialFields","className","socialFormGroup","propTypes","func","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProfile } from \"./../../store/actions/profile\";\nimport { withRouter } from \"react-router-dom\";\n\nconst CreateProfile = props => {\n  const [formData, setFormData] = useState({\n    company: \"\",\n    website: \"\",\n    location: \"\",\n    status: \"\",\n    skills: \"\",\n    githubusername: \"\",\n    bio: \"\",\n    twitter: \"\",\n    facebook: \"\",\n    linkedin: \"\",\n    youtube: \"\",\n    instagram: \"\"\n  });\n\n  const onSubmit = event => {\n    const edit = props.profile ? true : false;\n    event.preventDefault();\n    console.log(formData);\n    props.createProfile(formData, props.history, edit);\n  };\n\n  const [displaySocials, setSocials] = useState(false);\n\n  const onChange = event => {\n    setFormData({ ...formData, [event.target.name]: event.target.value });\n  };\n\n  const fields = [\n    {\n      placeholder: \"Company\",\n      name: \"company\",\n      text: \"Could be your own company or one you work for\"\n    },\n    {\n      placeholder: \"Website\",\n      name: \"website\",\n      text: \"Could be your own or a company website\"\n    },\n    {\n      placeholder: \"Location\",\n      name: \"location\",\n      text: \"City & state suggested (eg. Hamburg, Germany)\"\n    },\n    {\n      placeholder: \"+ Skills\",\n      name: \"skills\",\n      text: \"Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\"\n    },\n    {\n      placeholder: \"Github Username\",\n      name: \"githubusername\",\n      text:\n        \"If you want your latest repos and a Github link, include your username\"\n    }\n  ];\n\n  const formGroup = fields.map((field, i) => {\n    return (\n      <div className=\"form-group\" key={i}>\n        <input\n          type=\"text\"\n          placeholder={field.placeholder}\n          name={field.name}\n          value={formData[field.name]}\n          onChange={event => {\n            onChange(event);\n          }}\n        />\n        <small className=\"form-text\">{field.text}</small>\n      </div>\n    );\n  });\n\n  const socialFields = [\n    {\n      className: \"fab fa-twitter fa-2x\",\n      placeholder: \"Twitter URL\",\n      name: \"twitter\"\n    },\n    {\n      className: \"fab fa-facebook fa-2x\",\n      placeholder: \"Facebook URL\",\n      name: \"facebook\"\n    },\n    {\n      className: \"fab fa-youtube fa-2x\",\n      placeholder: \"YouTube URL\",\n      name: \"youtube\"\n    },\n    {\n      className: \"fab fa-instagram fa-2x\",\n      placeholder: \"Instagram URL\",\n      name: \"instagram\"\n    },\n    {\n      className: \"fab fa-linkedin fa-2x\",\n      placeholder: \"LinkedIn URL\",\n      name: \"linkedin\"\n    }\n  ];\n\n  const socialFormGroup = socialFields.map((field, i) => {\n    return (\n      <div className=\"form-group social-input\" key={i}>\n        <i className={field.className}></i>\n        <input\n          type=\"text\"\n          placeholder={field.placeholder}\n          name={field.name}\n          value={formData[field.name]}\n          onChange={event => {\n            onChange(event);\n          }}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form\n        className=\"form\"\n        onSubmit={event => {\n          onSubmit(event);\n        }}\n      >\n        <div className=\"form-group\">\n          <select\n            name=\"status\"\n            value={formData.status}\n            onChange={event => {\n              onChange(event);\n            }}\n          >\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\">\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        {formGroup}\n        <div className=\"form-group\">\n          <textarea\n            onChange={event => {\n              onChange(event);\n            }}\n            value={formData.bio}\n            placeholder=\"A short bio of yourself\"\n            name=\"bio\"\n          ></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button\n            type=\"button\"\n            className=\"btn btn-light\"\n            onClick={() => {\n              setSocials(!displaySocials);\n            }}\n          >\n            Add Social Network Links\n          </button>\n        </div>\n\n        {displaySocials && <Fragment>{socialFormGroup}</Fragment>}\n\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <a className=\"btn btn-light my-1\" href=\"dashboard.html\">\n          Go Back\n        </a>\n      </form>\n    </Fragment>\n  );\n};\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.profile.profile\n  };\n};\n\nexport default connect(mapStateToProps, { createProfile })(\n  withRouter(CreateProfile)\n);\n"]},"metadata":{},"sourceType":"module"}