{"ast":null,"code":"var _jsxFileName = \"/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/components/profile/Profile.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getProfileById } from \"./../../store/actions/profile\";\nimport { Link } from \"react-router-dom\";\n\nconst Profile = props => {\n  useEffect(() => {\n    console.log(props.auth.isAuthenticated);\n    props.getProfileById(props.match.params.id);\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, !props.profile || props.profile.loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.auth.isAuthenticated && !props.auth.loading && props.auth.user._id.toString() === props.match.params.id ? React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Edit Profile\") : null));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.profile,\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfileById","Link","Profile","props","console","log","auth","isAuthenticated","match","params","id","profile","loading","user","_id","toString","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACvBP,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAN,CAAWC,eAAvB;AACAJ,IAAAA,KAAK,CAACH,cAAN,CAAqBG,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBC,EAAxC;AACD,GAHQ,EAGN,EAHM,CAAT;AAIA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACP,KAAK,CAACQ,OAAP,IAAkBR,KAAK,CAACQ,OAAN,CAAcC,OAAhC,GACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,KAAK,CAACG,IAAN,CAAWC,eAAX,IACD,CAACJ,KAAK,CAACG,IAAN,CAAWM,OADX,IAEDT,KAAK,CAACG,IAAN,CAAWO,IAAX,CAAgBC,GAAhB,CAAoBC,QAApB,OAAmCZ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBC,EAFrD,GAGC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,eAAT;AAAyB,IAAA,SAAS,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHD,GAMG,IAPN,CAJJ,CADF;AAiBD,CAtBD;;AAwBAR,OAAO,CAACc,SAAR,GAAoB;AAClBhB,EAAAA,cAAc,EAAEH,SAAS,CAACoB,IAAV,CAAeC,UADb;AAElBP,EAAAA,OAAO,EAAEd,SAAS,CAACsB,MAAV,CAAiBD,UAFR;AAGlBZ,EAAAA,IAAI,EAAET,SAAS,CAACsB,MAAV,CAAiBD;AAHL,CAApB;;AAMA,MAAME,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLV,IAAAA,OAAO,EAAEU,KAAK,CAACV,OADV;AAELL,IAAAA,IAAI,EAAEe,KAAK,CAACf;AAFP,GAAP;AAID,CALD;;AAOA,eAAeR,OAAO,CAACsB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAA6CE,OAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getProfileById } from \"./../../store/actions/profile\";\nimport { Link } from \"react-router-dom\";\n\nconst Profile = props => {\n  useEffect(() => {\n    console.log(props.auth.isAuthenticated);\n    props.getProfileById(props.match.params.id);\n  }, []);\n  return (\n    <Fragment>\n      {!props.profile || props.profile.loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          {props.auth.isAuthenticated &&\n          !props.auth.loading &&\n          props.auth.user._id.toString() === props.match.params.id ? (\n            <Link to=\"/edit-profile\" className=\"btn btn-dark\">\n              Edit Profile\n            </Link>\n          ) : null}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.profile,\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n"]},"metadata":{},"sourceType":"module"}