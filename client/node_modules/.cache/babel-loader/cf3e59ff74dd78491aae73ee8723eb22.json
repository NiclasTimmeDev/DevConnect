{"ast":null,"code":"var _jsxFileName = \"/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/components/posts/Posts.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getPosts } from \"./../../store/actions/post\";\nimport Spinner from \"./../layout/Spinner\";\n\nconst Posts = props => {\n  useEffect(() => {\n    props.getPosts();\n  }, []);\n  const posts = props.posts.map((post, i) => {\n    return React.createElement(PostItem, {\n      key: props.post._id,\n      post: props.posts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  });\n  return props.loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), \" Welcome to the community\")));\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.post.posts,\n    loading: state.profile.loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPosts\n})(Posts);","map":{"version":3,"sources":["/Users/niclastimm/code/Udemy/MERN/DevConnector/client/src/components/posts/Posts.js"],"names":["React","Fragment","useEffect","connect","PropTypes","getPosts","Spinner","Posts","props","posts","map","post","i","_id","loading","propTypes","func","isRequired","object","mapStateToProps","state","profile"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,4BAAzB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrBN,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAACH,QAAN;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMI,KAAK,GAAGD,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOC,CAAP,KAAa;AACzC,WAAO,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEJ,KAAK,CAACG,IAAN,CAAWE,GAA1B;AAA+B,MAAA,IAAI,EAAEL,KAAK,CAACC,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFa,CAAd;AAIA,SAAOD,KAAK,CAACM,OAAN,GACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAGL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,8BADF,CADF,CAHF;AAWD,CApBD;;AAsBAP,KAAK,CAACQ,SAAN,GAAkB;AAChBV,EAAAA,QAAQ,EAAED,SAAS,CAACY,IAAV,CAAeC,UADT;AAEhBN,EAAAA,IAAI,EAAEP,SAAS,CAACc,MAAV,CAAiBD;AAFP,CAAlB;;AAKA,MAAME,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLX,IAAAA,KAAK,EAAEW,KAAK,CAACT,IAAN,CAAWF,KADb;AAELK,IAAAA,OAAO,EAAEM,KAAK,CAACC,OAAN,CAAcP;AAFlB,GAAP;AAID,CALD;;AAOA,eAAeX,OAAO,CAACgB,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAAuCE,KAAvC,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getPosts } from \"./../../store/actions/post\";\nimport Spinner from \"./../layout/Spinner\";\n\nconst Posts = props => {\n  useEffect(() => {\n    props.getPosts();\n  }, []);\n\n  const posts = props.posts.map((post, i) => {\n    return <PostItem key={props.post._id} post={props.posts} />;\n  });\n\n  return props.loading ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 className=\"large primary\">\n        <p className=\"lead\">\n          <i className=\"fas fa-user\"></i> Welcome to the community\n        </p>\n      </h1>\n    </Fragment>\n  );\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.post.posts,\n    loading: state.profile.loading\n  };\n};\n\nexport default connect(mapStateToProps, { getPosts })(Posts);\n"]},"metadata":{},"sourceType":"module"}